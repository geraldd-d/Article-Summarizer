{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald\\\\Desktop\\\\web dev projects\\\\frontend\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { UploadBar } from './components/UploadBar';\nimport { Language } from './components/Language';\nimport React, { useState } from 'react';\nimport './index.css';\nimport { SummaryText } from './components/SummaryText';\nimport { ToggleButtons } from './components/ToggleButtons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageOptions = [{\n  label: 'English',\n  value: 'en'\n}, {\n  label: 'Spanish',\n  value: 'es'\n}, {\n  label: 'French',\n  value: 'fr'\n}\n// Add more language options as needed\n];\n\nfunction App() {\n  _s();\n  // state variables\n  const [mode, setMode] = useState(\"summary\");\n  const [summaryText, setSummaryText] = useState(null);\n  const [isUploaded, setUploaded] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0]);\n  // upload functions\n  const handleClick = () => {\n    axios.post('http://127.0.0.1:8000/api/uploadfile').then(res => {\n      setSummaryText(res);\n    });\n  };\n  // language functions\n  const handleLanguageChange = event => {\n    const selectedValue = event.target.value;\n    const selectedOption = languageOptions.find(option => option.value === selectedValue);\n    setSelectedLanguage(selectedOption);\n  };\n  // mode functions\n  const setSumMode = () => {\n    setMode(\"summary\");\n  };\n  const setPPTMode = () => {\n    setMode(\"ppt\");\n  };\n  const setInfoMode = () => {\n    setMode(\"info\");\n  };\n  // render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black flex h-screen justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white 500 font-thin text-3xl\",\n      style: {\n        position: \"absolute\",\n        top: \"10%\"\n      },\n      children: \"Article Summariser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isUploaded && /*#__PURE__*/_jsxDEV(Language, {\n      languageOptions: languageOptions,\n      handleLanguageChange: handleLanguageChange,\n      selectedLanguage: selectedLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), !isUploaded && /*#__PURE__*/_jsxDEV(UploadBar, {\n      selectedFile: selectedFile,\n      handleFileChange: handleFileChange,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isUploaded && /*#__PURE__*/_jsxDEV(ToggleButtons, {\n      mode: mode,\n      onSum: setSumMode,\n      onPpt: setPPTMode,\n      onInfo: setInfoMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isUploaded && /*#__PURE__*/_jsxDEV(SummaryText, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jYNUNWYPEha5V2EVDWI4Mh82x3I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UploadBar","Language","React","useState","SummaryText","ToggleButtons","axios","jsxDEV","_jsxDEV","languageOptions","label","value","App","_s","mode","setMode","summaryText","setSummaryText","isUploaded","setUploaded","selectedLanguage","setSelectedLanguage","handleClick","post","then","res","handleLanguageChange","event","selectedValue","target","selectedOption","find","option","setSumMode","setPPTMode","setInfoMode","className","children","style","position","top","fileName","_jsxFileName","lineNumber","columnNumber","selectedFile","handleFileChange","onClick","onSum","onPpt","onInfo","_c","$RefreshReg$"],"sources":["C:/Users/Gerald/Desktop/web dev projects/frontend/frontend/src/App.js"],"sourcesContent":["import {UploadBar} from './components/UploadBar';\nimport {Language} from './components/Language';\nimport React, { useState } from 'react';\nimport './index.css';\nimport { SummaryText } from './components/SummaryText';\nimport { ToggleButtons } from './components/ToggleButtons';\nimport axios from 'axios';\n\nconst languageOptions = [\n  { label: 'English', value: 'en' },\n  { label: 'Spanish', value: 'es' },\n  { label: 'French', value: 'fr' },\n  // Add more language options as needed\n];\n\nfunction App() {\n  // state variables\n  const [mode, setMode] = useState(\"summary\");\n  const [summaryText, setSummaryText] = useState(null);\n  const [isUploaded, setUploaded] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0]);\n  // upload functions\n  const handleClick = () =>{\n    axios.post('http://127.0.0.1:8000/api/uploadfile')\n    .then(res => {\n      setSummaryText(res)\n    })\n  }\n  // language functions\n  const handleLanguageChange = (event) =>{\n    const selectedValue = event.target.value;\n    const selectedOption = languageOptions.find(option => option.value === selectedValue);\n    setSelectedLanguage(selectedOption);\n  }\n  // mode functions\n  const setSumMode = () =>{\n    setMode(\"summary\");\n  }\n  const setPPTMode = () =>{\n    setMode(\"ppt\");\n  }\n  const setInfoMode = () =>{\n    setMode(\"info\");\n  }\n  // render\n  return (\n    <div className=\"bg-black flex h-screen justify-center\">\n      <h1 className=\"text-white 500 font-thin text-3xl\" style = {{position: \"absolute\", top : \"10%\"}}>Article Summariser\n      </h1>\n      {!isUploaded && (\n      <Language languageOptions = {languageOptions} handleLanguageChange = {handleLanguageChange} selectedLanguage = {selectedLanguage}></Language>\n      )}\n      {!isUploaded && (\n      <UploadBar selectedFile = {selectedFile} handleFileChange = {handleFileChange} onClick = {handleClick}></UploadBar>\n      )}\n      {isUploaded && (\n      <ToggleButtons mode = {mode} onSum = {setSumMode} onPpt = {setPPTMode} onInfo = {setInfoMode}></ToggleButtons>\n      )}\n      {isUploaded && (\n      <SummaryText></SummaryText>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}