{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald\\\\Documents\\\\GitHub\\\\iNTUition\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { UploadBar } from './components/UploadBar';\nimport { Language } from './components/Language';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './index.css';\nimport { SummaryText } from './components/SummaryText';\nimport { ToggleButtons } from './components/ToggleButtons';\nimport axios from 'axios';\nimport { Description } from './components/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageOptions = [{\n  label: 'English',\n  value: 'en'\n}, {\n  label: 'Spanish',\n  value: 'es'\n}, {\n  label: 'French',\n  value: 'fr'\n}\n// Add more language options as needed\n];\n\nfunction App() {\n  _s();\n  // state variables\n  const stateRef = useRef();\n  const [summaryText, setSummaryText] = useState(\"\");\n  stateRef.current = summaryText;\n  const [mode, setMode] = useState(\"summary\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isUploaded, setUploaded] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0]);\n  // callback on summary\n  useEffect(() => {\n    console.log(summaryText);\n  }, [summaryText]);\n\n  // upload functions\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleClick = () => {\n    if (selectedFile) {\n      const data = new FormData();\n      data.append('file', selectedFile, selectedFile.name);\n      setUploaded(true);\n      axios.post('http://127.0.0.1:8000/api/uploadfile/', data).then(res => {\n        if (res) {\n          setSummaryText(res);\n        } else {\n          console.error(\"Invalid response data:\", res);\n        }\n      }).catch(err => {\n        console.error(\"Error uploading file:\", err);\n      });\n    }\n  };\n  // language functions\n  const handleLanguageChange = event => {\n    const selectedValue = event.target.value;\n    const selectedOption = languageOptions.find(option => option.value === selectedValue);\n    setSelectedLanguage(selectedOption);\n  };\n  // mode functions\n  const setSumMode = () => {\n    setMode(\"summary\");\n  };\n  const setPPTMode = () => {\n    setMode(\"ppt\");\n  };\n  const setInfoMode = () => {\n    setMode(\"info\");\n  };\n  // render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-stone-400 flex h-screen justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white text-4xl font-gloock\",\n      style: {\n        position: \"absolute\",\n        top: \"20%\"\n      },\n      children: \"Automatically extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !isUploaded && /*#__PURE__*/_jsxDEV(Language, {\n      languageOptions: languageOptions,\n      handleLanguageChange: handleLanguageChange,\n      selectedLanguage: selectedLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !isUploaded && /*#__PURE__*/_jsxDEV(UploadBar, {\n      selectedFile: selectedFile,\n      handleFileChange: handleFileChange,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isUploaded && /*#__PURE__*/_jsxDEV(ToggleButtons, {\n      mode: mode,\n      onSum: setSumMode,\n      onPpt: setPPTMode,\n      onInfo: setInfoMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), summaryText !== \"\" && isUploaded && /*#__PURE__*/_jsxDEV(SummaryText, {\n      summaryText: summaryText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kB+Io3+nrT24pfv/aK671YrwLAQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UploadBar","Language","React","useEffect","useRef","useState","SummaryText","ToggleButtons","axios","Description","jsxDEV","_jsxDEV","languageOptions","label","value","App","_s","stateRef","summaryText","setSummaryText","current","mode","setMode","selectedFile","setSelectedFile","isUploaded","setUploaded","selectedLanguage","setSelectedLanguage","console","log","handleFileChange","event","target","files","handleClick","data","FormData","append","name","post","then","res","error","catch","err","handleLanguageChange","selectedValue","selectedOption","find","option","setSumMode","setPPTMode","setInfoMode","className","children","style","position","top","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSum","onPpt","onInfo","_c","$RefreshReg$"],"sources":["C:/Users/Gerald/Documents/GitHub/iNTUition/frontend/src/App.js"],"sourcesContent":["import {UploadBar} from './components/UploadBar';\nimport {Language} from './components/Language';\nimport React, { useEffect, useRef,useState } from 'react';\nimport './index.css';\nimport { SummaryText } from './components/SummaryText';\nimport { ToggleButtons } from './components/ToggleButtons';\nimport axios from 'axios';\nimport { Description } from './components/Description';\n\n\n\nconst languageOptions = [\n  { label: 'English', value: 'en' },\n  { label: 'Spanish', value: 'es' },\n  { label: 'French', value: 'fr' },\n  // Add more language options as needed\n];\n\nfunction App() {\n  // state variables\n  const stateRef = useRef();\n  const [summaryText, setSummaryText] = useState(\"\");\n  stateRef.current = summaryText;\n  const [mode, setMode] = useState(\"summary\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isUploaded, setUploaded] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0]);\n  // callback on summary\n  useEffect(()=>{\n    console.log(summaryText);\n  },[summaryText]);\n\n  // upload functions\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleClick = () =>{\n    if(selectedFile){\n        const data = new FormData();\n        data.append('file', selectedFile, selectedFile.name);\n        setUploaded(true);\n        axios.post('http://127.0.0.1:8000/api/uploadfile/',data)\n        .then(res => {\n            if (res) {\n                setSummaryText(res);\n            } else {\n                console.error(\"Invalid response data:\", res);\n            }\n        })\n        .catch(err => {\n            console.error(\"Error uploading file:\", err);\n        });\n    }\n}\n  // language functions\n  const handleLanguageChange = (event) =>{\n    const selectedValue = event.target.value;\n    const selectedOption = languageOptions.find(option => option.value === selectedValue);\n    setSelectedLanguage(selectedOption);\n  }\n  // mode functions\n  const setSumMode = () =>{\n    setMode(\"summary\");\n  }\n  const setPPTMode = () =>{\n    setMode(\"ppt\");\n  }\n  const setInfoMode = () =>{\n    setMode(\"info\");\n  }\n  // render\n  return (\n    <div className=\"bg-stone-400 flex h-screen justify-center\">\n      <h1 className='text-white text-4xl font-gloock' style = {{position: \"absolute\", top: \"20%\"}}>Automatically extract</h1>\n      <Description></Description>\n      {!isUploaded && (\n      <Language languageOptions = {languageOptions} handleLanguageChange = {handleLanguageChange} selectedLanguage = {selectedLanguage}></Language>\n      )}\n      {!isUploaded && (\n      <UploadBar selectedFile = {selectedFile} handleFileChange = {handleFileChange} onClick = {handleClick}></UploadBar>\n      )}\n      {isUploaded && (\n      <ToggleButtons mode = {mode} onSum = {setSumMode} onPpt = {setPPTMode} onInfo = {setInfoMode}></ToggleButtons>\n      )}\n      {summaryText !== \"\" && isUploaded && (\n      <SummaryText summaryText = {summaryText}></SummaryText>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}