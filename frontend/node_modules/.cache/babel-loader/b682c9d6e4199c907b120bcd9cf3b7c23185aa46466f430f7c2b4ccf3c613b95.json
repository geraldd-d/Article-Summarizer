{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald\\\\Desktop\\\\web dev projects\\\\frontend\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { UploadBar } from './components/UploadBar';\nimport { Language } from './components/Language';\nimport React, { useState } from 'react';\nimport './index.css';\nimport { SummaryText } from './components/SummaryText';\nimport { ToggleButtons } from './components/ToggleButtons';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageOptions = [{\n  label: 'English',\n  value: 'en'\n}, {\n  label: 'Spanish',\n  value: 'es'\n}, {\n  label: 'French',\n  value: 'fr'\n}\n// Add more language options as needed\n];\n\nfunction App() {\n  _s();\n  // state variables\n  const [summaryText, setSummaryText] = useState(\"test\");\n  const [mode, setMode] = useState(\"summary\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isUploaded, setUploaded] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0]);\n  // upload functions\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleClick = () => {\n    if (selectedFile) {\n      const data = new FormData();\n      data.append('file', selectedFile, selectedFile.name);\n      setUploaded(true);\n      axios.post('http://127.0.0.1:8000/api/uploadfile/', data).then(res => {\n        setSummaryText(res);\n        console.log(res);\n        console.log(summaryText);\n      });\n    }\n  };\n  // language functions\n  const handleLanguageChange = event => {\n    const selectedValue = event.target.value;\n    const selectedOption = languageOptions.find(option => option.value === selectedValue);\n    setSelectedLanguage(selectedOption);\n  };\n  // mode functions\n  const setSumMode = () => {\n    setMode(\"summary\");\n  };\n  const setPPTMode = () => {\n    setMode(\"ppt\");\n  };\n  const setInfoMode = () => {\n    setMode(\"info\");\n  };\n  // render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black flex h-screen justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white 500 font-thin text-3xl\",\n      style: {\n        position: \"absolute\",\n        top: \"10%\"\n      },\n      children: \"Article Summariser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), !isUploaded && /*#__PURE__*/_jsxDEV(Language, {\n      languageOptions: languageOptions,\n      handleLanguageChange: handleLanguageChange,\n      selectedLanguage: selectedLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), !isUploaded && /*#__PURE__*/_jsxDEV(UploadBar, {\n      selectedFile: selectedFile,\n      handleFileChange: handleFileChange,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), isUploaded && /*#__PURE__*/_jsxDEV(ToggleButtons, {\n      mode: mode,\n      onSum: setSumMode,\n      onPpt: setPPTMode,\n      onInfo: setInfoMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), isUploaded && /*#__PURE__*/_jsxDEV(SummaryText, {\n      summaryText: summaryText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uolAos/HjBudt1WK/1unXpVeiJw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UploadBar","Language","React","useState","SummaryText","ToggleButtons","axios","jsxDEV","_jsxDEV","languageOptions","label","value","App","_s","summaryText","setSummaryText","mode","setMode","selectedFile","setSelectedFile","isUploaded","setUploaded","selectedLanguage","setSelectedLanguage","handleFileChange","event","target","files","handleClick","data","FormData","append","name","post","then","res","console","log","handleLanguageChange","selectedValue","selectedOption","find","option","setSumMode","setPPTMode","setInfoMode","className","children","style","position","top","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSum","onPpt","onInfo","_c","$RefreshReg$"],"sources":["C:/Users/Gerald/Desktop/web dev projects/frontend/frontend/src/App.js"],"sourcesContent":["import {UploadBar} from './components/UploadBar';\nimport {Language} from './components/Language';\nimport React, { useState } from 'react';\nimport './index.css';\nimport { SummaryText } from './components/SummaryText';\nimport { ToggleButtons } from './components/ToggleButtons';\nimport axios from 'axios';\n\n\n\nconst languageOptions = [\n  { label: 'English', value: 'en' },\n  { label: 'Spanish', value: 'es' },\n  { label: 'French', value: 'fr' },\n  // Add more language options as needed\n];\n\nfunction App() {\n  // state variables\n  const [summaryText, setSummaryText] = useState(\"test\");\n  const [mode, setMode] = useState(\"summary\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isUploaded, setUploaded] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(languageOptions[0]);\n  // upload functions\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleClick = () =>{\n    if(selectedFile){\n      const data = new FormData();\n      data.append('file', selectedFile, selectedFile.name);\n      setUploaded(true);\n      axios.post('http://127.0.0.1:8000/api/uploadfile/',data)\n        .then(res => {\n         setSummaryText(res);\n         console.log(res);\n         console.log(summaryText);\n      })\n    }\n  }\n  // language functions\n  const handleLanguageChange = (event) =>{\n    const selectedValue = event.target.value;\n    const selectedOption = languageOptions.find(option => option.value === selectedValue);\n    setSelectedLanguage(selectedOption);\n  }\n  // mode functions\n  const setSumMode = () =>{\n    setMode(\"summary\");\n  }\n  const setPPTMode = () =>{\n    setMode(\"ppt\");\n  }\n  const setInfoMode = () =>{\n    setMode(\"info\");\n  }\n  // render\n  return (\n    <div className=\"bg-black flex h-screen justify-center\">\n      <h1 className=\"text-white 500 font-thin text-3xl\" style = {{position: \"absolute\", top : \"10%\"}}>Article Summariser\n      </h1>\n      {!isUploaded && (\n      <Language languageOptions = {languageOptions} handleLanguageChange = {handleLanguageChange} selectedLanguage = {selectedLanguage}></Language>\n      )}\n      {!isUploaded && (\n      <UploadBar selectedFile = {selectedFile} handleFileChange = {handleFileChange} onClick = {handleClick}></UploadBar>\n      )}\n      {isUploaded && (\n      <ToggleButtons mode = {mode} onSum = {setSumMode} onPpt = {setPPTMode} onInfo = {setInfoMode}></ToggleButtons>\n      )}\n      {isUploaded && (\n      <SummaryText summaryText = {summaryText}></SummaryText>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}